mqtt:
  sensor:
    - name: "Tina Desktop - Storage C Temperature"
      state_topic: "iotlink/workgroup/xia-desktop/monitor/stats/storages/ct1000p1ssd8/temperatue"
      unit_of_measurement: 'C'
      icon: mdi:thermometer
      value_template: "{{ value }}"
      availability_topic: "iotlink/workgroup/xia-desktop/lwt"
      payload_available: "ON"
      payload_not_available: "OFF"
      qos: 1

    - name: "Tina Desktop - Storage D Temperature"
      state_topic: "iotlink/workgroup/xia-desktop/monitor/stats/storages/san-disk_ssd_plus_240gb/temperatue"
      unit_of_measurement: 'C'
      icon: mdi:thermometer
      value_template: "{{ value }}"
      availability_topic: "iotlink/workgroup/xia-desktop/lwt"
      payload_available: "ON"
      payload_not_available: "OFF"
      qos: 1

script:
  tina_desktop_wake:
    # To enable see https://www.home-assistant.io/components/wake_on_lan/
    alias: "Tina Desktop - Wake"
    sequence:
      - service: wake_on_lan.send_magic_packet
        data:
          mac: "B4:2E:99:A8:CF:88"

  tina_desktop_shutdown:
    alias: "Tina Desktop - Shutdown"
    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/xia-desktop/commands/shutdown"
          payload: ""

  tina_desktop_suspend:
    alias: "Tina Desktop - Suspend"
    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/xia-desktop/commands/suspend"
          payload: ""

  tina_desktop_hibernate:
    alias: "Tina Desktop - Hibernate"
    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/xia-desktop/commands/hibernate"
          payload: ""

  tina_desktop_reboot:
    alias: "Tina Desktop - Reboot"
    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/xia-desktop/commands/reboot"
          payload: ""

  tina_desktop_lock:
    alias: "Tina Desktop - Lock"
    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/xia-desktop/commands/lock"
          payload: ""

  tina_desktop_logoff:
    alias: "Tina Desktop - Logoff"
    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/xia-desktop/commands/logoff"
          payload: ""

  tina_desktop_vol_mute:
    alias: "Tina Desktop - Toggle Mute"
    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/xia-desktop/commands/volume/mute"
          payload: ""

  tina_desktop_vol_max:
    alias: "Tina Desktop - Vol Max"
    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/xia-desktop/commands/volume/set"
          payload: "100"

  tina_desktop_displays_on:
    alias: "Tina Desktop - Displays ON"
    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/xia-desktop/commands/displays/on"
          payload: ""

  tina_desktop_displays_off:
    alias: "Tina Desktop - Displays OFF"
    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/xia-desktop/commands/displays/off"
          payload: ""

  tina_desktop_refresh:
    alias: "Tina Desktop - Refresh"
    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/xia-desktop/refresh"
          payload: ""

  tina_desktop_notify:
    alias: "Tina Desktop - Notify"
    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/xia-desktop/commands/notify"
          payload: '{ "title": "My Notification Title", "message": "This is an example of notification using IOT Link", "launchParams": "toast://open/https://iotlink.gitlab.io" }'

  tina_desktop_run_chrome:
    alias: "Tina Desktop - Run Chrome"
    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/xia-desktop/commands/run"
          payload: '{ "command": "C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe", "args": "https://iotlink.gitlab.io", "path": "C:\\Program Files (x86)\\Google\\Chrome\\Application", "user": "", "visible": true, "fallback": true }'
